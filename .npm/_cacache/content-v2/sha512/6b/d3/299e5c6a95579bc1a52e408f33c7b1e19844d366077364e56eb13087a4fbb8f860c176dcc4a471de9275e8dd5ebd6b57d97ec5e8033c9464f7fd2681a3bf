{"_id":"cpu-stat","_rev":"9-b6b66bb4e27f9e59a1d9ab02e6fe011c","name":"cpu-stat","description":"CPU Statistics not provided by `os` module","dist-tags":{"latest":"2.0.1"},"versions":{"1.0.0":{"name":"cpu-stat","version":"1.0.0","description":"CPU Statistics not provided by `os` module","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/jub3i/node-cpu-stat"},"keywords":["cpu","stats","statistics","usage","percentage","percent","cores","mhz","clock","speed"],"bugs":{"url":"https://github.com/jub3i/node-cpu-stat/issues"},"author":{"name":"jub3i"},"license":"MIT","gitHead":"45fa2e764ec83a9401234100360b6480678e1343","homepage":"https://github.com/jub3i/node-cpu-stat","_id":"cpu-stat@1.0.0","_shasum":"c256547d3cd5a6ae1ff3cf638c3dd3f0ce46c267","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jub3i","email":"anon66@gmail.com"},"maintainers":[{"name":"jub3i","email":"anon66@gmail.com"}],"dist":{"shasum":"c256547d3cd5a6ae1ff3cf638c3dd3f0ce46c267","tarball":"https://registry.npmjs.org/cpu-stat/-/cpu-stat-1.0.0.tgz","integrity":"sha512-SvuCG18Lk7GPtgUfoF3LqGBnfv5blMMa8rsgQXzHfmOFQh1QT0xOVeR6hio4dTaSSn2VuFwXGaiMdKt9QNtw0A==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIG5YgPsb6QLYVz18L0X3Ff+YX9BpNmjdbRu6erdH9YiSAiEAwWY1E2ESn+7kx+LaFxtSvmDu5E6i0yCOw01p+FV/7hQ="}]}},"1.0.1":{"name":"cpu-stat","version":"1.0.1","description":"CPU Statistics not provided by `os` module","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/jub3i/node-cpu-stat"},"keywords":["cpu","stats","statistics","usage","percentage","percent","cores","mhz","clock","speed"],"bugs":{"url":"https://github.com/jub3i/node-cpu-stat/issues"},"author":{"name":"jub3i"},"license":"MIT","gitHead":"0095bc37e413fe57258791357f918398577334e3","homepage":"https://github.com/jub3i/node-cpu-stat","_id":"cpu-stat@1.0.1","_shasum":"6862dbc7bfb0bdaa7bb92bb6caae322c1016213c","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jub3i","email":"anon66@gmail.com"},"maintainers":[{"name":"jub3i","email":"anon66@gmail.com"}],"dist":{"shasum":"6862dbc7bfb0bdaa7bb92bb6caae322c1016213c","tarball":"https://registry.npmjs.org/cpu-stat/-/cpu-stat-1.0.1.tgz","integrity":"sha512-RF6LP3Xzj62BC5Ted2s/wDWwk44nSEkp3stgW6SwlVIT3VjBfn9vo4OuBa7ltg+aPOX4ygJ3wqRtHJTeVzmzyQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCl5bgFjAqRoGbQLPBnz0JmQVnZxlrup0x4PeU3IeX4qgIgK7wj5OoS4B+8JzaxXLxZ5012bMuuAivxAIecaGHAXXo="}]}},"2.0.0":{"name":"cpu-stat","version":"2.0.0","description":"CPU Statistics not provided by `os` module","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/jub3i/node-cpu-stat"},"keywords":["cpu","stats","statistics","usage","percentage","percent","cores","mhz","clock","speed"],"bugs":{"url":"https://github.com/jub3i/node-cpu-stat/issues"},"author":{"name":"jub3i"},"license":"MIT","gitHead":"bc2d335059d022486d649dbaf98189830b55c68d","homepage":"https://github.com/jub3i/node-cpu-stat","_id":"cpu-stat@2.0.0","_shasum":"8b48c4732488d1b7ef5b3085af666bf018833db0","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jub3i","email":"anon66@gmail.com"},"maintainers":[{"name":"jub3i","email":"anon66@gmail.com"}],"dist":{"shasum":"8b48c4732488d1b7ef5b3085af666bf018833db0","tarball":"https://registry.npmjs.org/cpu-stat/-/cpu-stat-2.0.0.tgz","integrity":"sha512-Vhor5yVds4QsMgennxfzWAIeTZ6MADtBMPXMH0dp6bvr+ivGrX4tcbpXc2mDUE74jht6YV5GD8MLaob0Z3UoyA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC1HIpRzEtQe1/rTIelQXRd0UMkY1qFekKkZGsvtk5xQAiEA1/+MP2nXZNU95imVuFxAU5uZj+UAeJ7kueYHhgtKXww="}]}},"2.0.1":{"name":"cpu-stat","version":"2.0.1","description":"CPU Statistics not provided by `os` module","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/jub3i/node-cpu-stat"},"keywords":["cpu","stats","statistics","usage","percentage","percent","cores","mhz","clock","speed"],"bugs":{"url":"https://github.com/jub3i/node-cpu-stat/issues"},"author":{"name":"jub3i"},"license":"MIT","gitHead":"7f721afaeb9640b4aafee05d53dec91c4b94e343","homepage":"https://github.com/jub3i/node-cpu-stat","_id":"cpu-stat@2.0.1","_shasum":"501e8d6dd2d44cef5d842939c38d1822c078fcac","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jub3i","email":"anon66@gmail.com"},"maintainers":[{"name":"jub3i","email":"anon66@gmail.com"}],"dist":{"shasum":"501e8d6dd2d44cef5d842939c38d1822c078fcac","tarball":"https://registry.npmjs.org/cpu-stat/-/cpu-stat-2.0.1.tgz","integrity":"sha512-bC4ts/0IjYfNV6Dc7F2NauWM0tip0fneZjRek8HqX2ZERC4oSt6dmV+GTN1mfE9OKbLAppv58M2PVzKLGB731w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCR7njyzixjECIiTtHAOV01sg/1iFLabc1gjWygcskPKQIhALiFBPJ/igutB77OLvNZxtCifcOloUZBHcPvzUnui8tp"}]}}},"readme":"cpu-stat\n========\n\n```\n  _______ _______ ___ ___ _______ _______ _______ _______\n |   _   |   _   |   Y   |   _   |       |   _   |       |\n |.  1___|.  1   |.  |   |   1___|.|   | |.  1   |.|   | |\n |.  |___|.  ____|.  |   |____   `-|.  |-|.  _   `-|.  |-'\n |:  1   |:  |   |:  1   |:  1   | |:  | |:  |   | |:  |\n |::.. . |::.|   |::.. . |::.. . | |::.| |::.|:. | |::.|\n `-------`---'   `-------`-------' `---' `--- ---' `---'\n```\n\n**Note:** This repo can be found on npm here: [cpu-stat](https://www.npmjs.com/package/cpu-stat)\n\n**Note:** This repo can be found on github here: [node-cpu-stat](https://github.com/jub3i/node-cpu-stat)\n\n**Note:** This module only relies on the `os` module, so it should be compatible on all OS's where Node.js runs.\n\nInstall\n-------\n\n```\nnpm install cpu-stat\n```\n\nExample\n-------\n\n```\nvar cpuStat = require('cpu-stat');\n```\n\n```\n//by default returns cpu usage percent for all cores over a period of the next 1000ms\ncpuStat.usagePercent(function(err, percent, seconds) {\n    if (err) {\n      return console.log(err);\n    }\n\n    //the percentage cpu usage over all cores\n    console.log(percent);\n\n    //the approximate number of seconds the sample was taken over\n    console.log(seconds);\n});\n```\n\n```\n//get the cpu usage percent for core 0 over a sample period of 2000ms\ncpuStat.usagePercent({\n    coreIndex: 0,\n    sampleMs: 2000,\n  },\n  function(err, percent, seconds) {\n    if (err) {\n      return console.log(err);\n    }\n\n    //the percentage cpu usage for core 0\n    console.log(percent);\n\n    //the approximate number of seconds the sample was taken over\n    console.log(seconds);\n});\n```\n\n```\n//get the total number of cores\nvar totalCores = cpuStat.totalCores();\nconsole.log(totalCores);\n```\n\n```\n//get the average clock MHz over all cores\nvar avgClockMHz = cpuStat.avgClockMHz();\nconsole.log(avgClockMHz);\n```\n\n```\n//get the clock MHz for core with index 2\nvar avgClockMHzCore2 = cpuStat.clockMHz(2);\nconsole.log(avgClockMHzCore2);\n```\n\nusagePercent(opts, cb)\n----------------------\n\nProvides a callback `cb(err, percent, seconds)` giving the `percent` cpu usage and `seconds` the length of the sample time, or an error `err`\n\nOption               | Type         | Default            | Explanation\n-------------------- | -------------| ------------------ | ------------\nopts                 | `Object`     | see below          | Options object, specify what you need the defaults will be filled in\nopts.coreIndex       | `Number`     | all cores          | The index of the core to calculate the usage on. Can use any `coreIndex` such that `0 >= coreIndex < memStat.totalCores()`\nopts.sampleMs        | `String`     | `1000`             | `sampleMs` is the amount of time to take the measurement over\ncb                   | `Function`   | none               | Callback which has signature `cb(err, percent, seconds)`\n\ntotalCores()\n------------\n\nReturns the total number of cores available on the cpu\n\nclockMHz(coreIndex)\n-------------------\n\nReturns the clock speed in MHz of core with index `coreIndex`\n\navgClockMHz()\n-------------\n\nReturns the average clock speed in MHz over all cores\n\nContributing\n------------\n\nJust send a PR, or create an issue if you are not sure.\n\nAreas ripe for contribution:\n- testing\n- performance\n- bugs\n\nOther Stat Modules\n------------------\n\n\n- cpu-stat [npm](https://www.npmjs.com/package/cpu-stat) [git](https://github.com/jub3i/node-cpu-stat)\n- net-stat [npm](https://www.npmjs.com/package/net-stat) [git](https://github.com/jub3i/node-net-stat)\n- disk-stat [npm](https://www.npmjs.com/package/disk-stat) [git](https://github.com/jub3i/node-disk-stat)\n- mem-stat [npm](https://www.npmjs.com/package/mem-stat) [git](https://github.com/jub3i/node-mem-stat)\n\n**Note:** net-stat, disk-stat, mem-stat only work on nix platforms.\n\nLicense\n-------\n\nMIT\n\n","maintainers":[{"name":"jub3i","email":"anon66@gmail.com"}],"time":{"modified":"2022-06-14T02:23:57.917Z","created":"2015-11-30T00:01:54.792Z","1.0.0":"2015-11-30T00:01:54.792Z","1.0.1":"2015-11-30T00:09:51.057Z","2.0.0":"2015-11-30T17:56:55.894Z","2.0.1":"2015-11-30T18:19:28.770Z"},"homepage":"https://github.com/jub3i/node-cpu-stat","keywords":["cpu","stats","statistics","usage","percentage","percent","cores","mhz","clock","speed"],"repository":{"type":"git","url":"https://github.com/jub3i/node-cpu-stat"},"author":{"name":"jub3i"},"bugs":{"url":"https://github.com/jub3i/node-cpu-stat/issues"},"license":"MIT","readmeFilename":"README.md","users":{"buzuli":true,"hibrahimsafak":true,"phoensxar":true}}